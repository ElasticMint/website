<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Elastic Mint</title>
    <link>https://www.elasticmint.com/</link>
    <description>Recent content on Elastic Mint</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Fri, 02 Nov 2018 09:11:04 +0000</lastBuildDate>
    
	<atom:link href="https://www.elasticmint.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Do We Still Need Orms?</title>
      <link>https://www.elasticmint.com/blog/2018/11/02/do-we-still-need-orms/</link>
      <pubDate>Fri, 02 Nov 2018 09:11:04 +0000</pubDate>
      
      <guid>https://www.elasticmint.com/blog/2018/11/02/do-we-still-need-orms/</guid>
      <description>Do you remember the first time you used an ORM (Object Relational Mapper)? For me it was something I wrote to make it easier to map data related to testing electronic devices into a SQL database. Different devices generated different test data, and so I used a convention to map the property names on the classes to the SQL tables and columns. At the time I didn&amp;rsquo;t even know what an ORM was.</description>
    </item>
    
    <item>
      <title>Bespoke software</title>
      <link>https://www.elasticmint.com/blog/2018/09/24/what-is-bespoke-software/</link>
      <pubDate>Mon, 24 Sep 2018 12:00:00 +0100</pubDate>
      
      <guid>https://www.elasticmint.com/blog/2018/09/24/what-is-bespoke-software/</guid>
      <description>What is bespoke software? Bespoke is just a fancy word for custom, right? Well, yes. And no.
According to putthison.com the word &amp;lsquo;originated in shoemaking, but gained in popularity through custom tailoring in England, where lengths of cloths were said to be “spoken for” or “bespoken” by another customer.&amp;rsquo; 1 There are several levels of custom-made clothes:
 Made-to-order - only the materials are customised Made-to-measure - the materials and the cut are tailored based on a single fitting Bespoke - garments are made through a series of fittings  Translating this into software development, we can think of &amp;lsquo;made-to-measure&amp;rsquo; as being like a fixed-scope, Waterfall development process, where we get the requirements up-front, build the software and then deliver it.</description>
    </item>
    
    <item>
      <title>The Curse of IoC and Why We Write Too Many Useless Tests</title>
      <link>https://www.elasticmint.com/blog/2018/09/11/too-many-tests/</link>
      <pubDate>Tue, 11 Sep 2018 13:37:01 +0100</pubDate>
      
      <guid>https://www.elasticmint.com/blog/2018/09/11/too-many-tests/</guid>
      <description>Sometimes it seems that we simply go from one extreme to another. Once upon a time developers didn&amp;rsquo;t bother to write tests. Everything was tested manually. When changes were made the whole thing would need to be manually tested again. Sometimes we used test scripts, other times we just played around trying to break functionally. And then we couldn&amp;rsquo;t remember what we had done to break it!
Managers would roll their eyes in frustration when developers talked about writing unit tests.</description>
    </item>
    
    <item>
      <title>We need to talk about legacy software</title>
      <link>https://www.elasticmint.com/blog/2018/08/29/we-need-to-talk-about-legacy-software/</link>
      <pubDate>Wed, 29 Aug 2018 09:00:00 +0000</pubDate>
      
      <guid>https://www.elasticmint.com/blog/2018/08/29/we-need-to-talk-about-legacy-software/</guid>
      <description>Sometimes we forget how much old software is out there. We talk about the software industry still being young and perhaps quite immature, but actually, word processing software started reaching offices in the early 1970s - over 40 years ago. The first version of PowerPoint was released in 1987, public use of the internet began in 1989 and then exploded during the 1990s.
Looking back it is striking how much has changed in a short period of time.</description>
    </item>
    
    <item>
      <title>Are experienced software developers better?</title>
      <link>https://www.elasticmint.com/blog/2018/08/12/are-experienced-software-developers-better/</link>
      <pubDate>Sun, 12 Aug 2018 09:00:00 +0100</pubDate>
      
      <guid>https://www.elasticmint.com/blog/2018/08/12/are-experienced-software-developers-better/</guid>
      <description>In short, it depends!
At Elastic Mint we take experience seriously. It’s one of the things that informs everything we do. We find that a good developer with a wealth of experience will make better decisions. They will reflect on things they have seen and done, learn from them, and then use that knowledge as and when appropriate.
Although it’s a bit old now, Peter Knego makes this point in his blog here, where he analyses reputation statistics on Stack Overflow.</description>
    </item>
    
    <item>
      <title>agile code (retreat on the beach)</title>
      <link>https://www.elasticmint.com/blog/2018/04/19/agile-code-retreat/</link>
      <pubDate>Thu, 19 Apr 2018 09:00:00 +0000</pubDate>
      
      <guid>https://www.elasticmint.com/blog/2018/04/19/agile-code-retreat/</guid>
      <description>On 19th March Gordon and I attended a 2 day agile coding retreat in St Austell, Cornwall. Hosted by Kevlin Henney and Jon Jagger the retreat was organised for developers to discuss, practice and improve their software craftsmanship, communication and creativity. Having personally never attended such an event before I was interested to see if there was an opportunity for me to hone my programming skills to ultimately improve my performance as a developer.</description>
    </item>
    
    <item>
      <title>Fixing Intermittent Test Failures With NCrunch</title>
      <link>https://www.elasticmint.com/blog/2018/04/16/fixing-intermittent-test-failures/</link>
      <pubDate>Mon, 16 Apr 2018 09:00:00 +0000</pubDate>
      
      <guid>https://www.elasticmint.com/blog/2018/04/16/fixing-intermittent-test-failures/</guid>
      <description>I was working with a company recently where we were using Xunit as our test framework, NSubstitute for mocks, stubs etc and we ran our tests using NCrunch whilst developing in Visual Studio. At one point during the project we noticed that some of our unit tests were failing intermittently. This is more common in longer running integration tests but not so common in unit tests. When we do see this behaviour in unit tests the cause is often shared state being accessed when unit tests are being run in parallel.</description>
    </item>
    
    <item>
      <title>BDD frameworks compared - SpecFlow and BDDfy</title>
      <link>https://www.elasticmint.com/blog/2018/04/11/bdd-frameworks-compared/</link>
      <pubDate>Wed, 11 Apr 2018 09:00:00 +0000</pubDate>
      
      <guid>https://www.elasticmint.com/blog/2018/04/11/bdd-frameworks-compared/</guid>
      <description>I first learnt about writing unit tests following a project where we missed the deadline and spent far too long fixing and then refixing the code. I became frustrated that we would fix one thing and then something else would go wrong. When I saw how tools like NUnit and Rhino Mocks gave me the confidence to fix bugs and refactor it genuinely changed my working life. On my next project I determined to write tests as I went along and to be honest I&amp;rsquo;ve never looked back.</description>
    </item>
    
    <item>
      <title>Using impact maps to improve product delivery</title>
      <link>https://www.elasticmint.com/blog/2018/03/30/using-impact-mapping/</link>
      <pubDate>Fri, 30 Mar 2018 15:00:00 +0000</pubDate>
      
      <guid>https://www.elasticmint.com/blog/2018/03/30/using-impact-mapping/</guid>
      <description>Like me haven&amp;rsquo;t you at times been frustrated by software that has been delivered late and not made the business impact you expected. A lot of time and money had been wasted due to assumptions being made with inadequate requirements; poor communication of team objectives and an overall lack of understanding, focus and misalignment with the overall business goals. As a developer I use interative delivery and this places emphasis on integrating learning from delivery and refining the scope and requirements.</description>
    </item>
    
    <item>
      <title>Why we think smaller teams are better</title>
      <link>https://www.elasticmint.com/blog/2018/03/03/why-small-teams/</link>
      <pubDate>Sat, 03 Mar 2018 09:00:00 +0000</pubDate>
      
      <guid>https://www.elasticmint.com/blog/2018/03/03/why-small-teams/</guid>
      <description>Over the years I&amp;rsquo;ve worked on lots of teams. Some good, and some not so. But what is it that makes a team successful?
There are the obvious things like the kind of people you have on the team. If the team members just don&amp;rsquo;t get on, if they don&amp;rsquo;t have the skills required to do the job, or they just aren&amp;rsquo;t interested in working hard then it&amp;rsquo;s clear the team will suffer.</description>
    </item>
    
    <item>
      <title>Our Team</title>
      <link>https://www.elasticmint.com/team/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.elasticmint.com/team/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Our Values</title>
      <link>https://www.elasticmint.com/values/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.elasticmint.com/values/</guid>
      <description>You might recognise our values. When we came together as a partnership one of the first things we did was to list all the things we would always do and all the things we would never do. For example, some of things that appeared in the &amp;lsquo;always do&amp;rsquo; list were to be open and transparent about what we do, communicate both good and bad news, work collaboratively and deliver software we are proud of.</description>
    </item>
    
  </channel>
</rss>